const { Telegraf } = require("telegraf");
const { initializeApp } = require("firebase/app");
const { getFirestore, collection, addDoc, getDocs, query, where } = require("firebase/firestore");

// üîê –ü—Ä—è–º–æ —É–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–∏ (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞, –Ω–æ –º–æ–∂–Ω–æ –¥–ª—è MVP/—Ç–µ—Å—Ç–∞)
const firebaseConfig = {
  apiKey: "AIzaSyA4Fd-KO1dmNjk-Qz2LTk3dwlO9cMpm6oc",
  authDomain: "miner-d9gz29.firebaseapp.com",
  projectId: "miner-d9gz29.firebaseapp.com",
};

const firebaseApp = initializeApp(firebaseConfig);
const db = getFirestore(firebaseApp);

// üîß –£–∫–∞–∂–∏ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
const BOT_TOKEN = "7954194940:AAGzPp4iu3DTwegfEgAuzWReT7dQ2sZJyfU";

const bot = new Telegraf(BOT_TOKEN);

bot.start(async (ctx) => {
  const referredUserId = ctx.from.id.toString();
  const refParam = ctx.startPayload;
  const referrerId = refParam?.replace("ref", "");

  if (referrerId && referredUserId !== referrerId) {
    const q = query(
      collection(db, "referrals"), // –∏–ª–∏ "refferals" –µ—Å–ª–∏ —Ç—ã –æ—Å—Ç–∞–≤–∏–ª —Å –æ—à–∏–±–∫–æ–π
      where("referredUserId", "==", referredUserId)
    );
    const snapshot = await getDocs(q);

    if (snapshot.empty) {
      await addDoc(collection(db, "referrals"), {
        referredUserId,
        referrerId,
        createdAt: new Date(),
        bonusGiven: false
      });
      console.log(`–ó–∞–ø–∏—Å—å –æ —Ä–µ—Ñ–µ—Ä–∞–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞: ${referredUserId} ‚Üê ${referrerId}`);
    } else {
      console.log(`–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞—Ö–æ–¥ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ: ${referredUserId}`);
    }
  }

  await ctx.reply("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!", {
    reply_markup: {
      inline_keyboard: [[{
        text: "–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        web_app: { url: "https://miner-d9gz213.flutterflow.app/" }
      }]]
    }
  });
});

bot.launch().then(() => {
  console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
});
